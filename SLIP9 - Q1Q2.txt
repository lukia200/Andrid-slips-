SLIP9 - Q1
<!-- activity_main.xml -->
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">
    <EditText
        android:id="@+id/editTextNumber1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Number 1"
        android:inputType="number"/>
    <EditText
        android:id="@+id/editTextNumber2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Number 2"
        android:inputType="number"/>
    <Button
        android:id="@+id/buttonSubmit"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Submit"/>
    <TextView
        android:id="@+id/textViewResult"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"/>
</LinearLayout>

//java file
// MainActivity.java
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    private EditText editTextNumber1, editTextNumber2;
    private Button buttonSubmit;
    private TextView textViewResult;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        editTextNumber1 = findViewById(R.id.editTextNumber1);
        editTextNumber2 = findViewById(R.id.editTextNumber2);
        buttonSubmit = findViewById(R.id.buttonSubmit);
        textViewResult = findViewById(R.id.textViewResult);
        buttonSubmit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                submitNumbers();
            }
        });   }
    private void submitNumbers() {
        String number1String = editTextNumber1.getText().toString().trim();
        String number2String = editTextNumber2.getText().toString().trim();
        if (number1String.isEmpty() || number2String.isEmpty()) {
            Toast.makeText(this, "Please enter both numbers", Toast.LENGTH_SHORT).show();
            return;
        }
        int number1 = Integer.parseInt(number1String);
        int number2 = Integer.parseInt(number2String);
        if (number1 > 10 && number2 > 10) {
            Toast.makeText(this, "Both numbers cannot be greater than 10. Please enter new numbers.", Toast.LENGTH_SHORT).show();
            return;
        }
        textViewResult.setText("Number 1: " + number1 + "\nNumber 2: " + number2);
    }      }

SLIP9 - Q2
 Write a program to find the specific location of an Android device and display details ofthe place 
like Address line, city with Geocoding.
 Add dependencies in gradle.kits 2nd option
dependencies { 
 
    implementation(libs.appcompat) 
    implementation(libs.material) 
    implementation(libs.activity) 
    implementation(libs.constraintlayout) 
    implementation(libs.play.services.location) 
    testImplementation(libs.junit) 
    androidTestImplementation(libs.ext.junit) 
    androidTestImplementation(libs.espresso.core) 
} 
<uses-permission 
android:name="android.permission.ACCESS_FINE_LOCATION" /> 
<uses-permission android:name="android.permission.INTERNET" /> 
<uses-permission 
android:name="android.permission.ACCESS_COARSE_LOCATION" /> 

<meta-data 
    android:name="com.google.android.geo.API_KEY" 
    android:value="AIzaSyDQQOMi9qvZVesWH5wHCXeijEkV4INPA3Y" /> 

Xml code 
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" 
    xmlns:tools="http://schemas.android.com/tools" 
    android:layout_width="match_parent" 
    android:layout_height="match_parent" 
    tools:context=".MainActivity"> 
 
    <TextView 
        android:id="@+id/locationTextView" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:textSize="18sp" 
        android:padding="16dp"/> 
 
</RelativeLayout>
Java code 
package com.example.example; 
 
import android.Manifest; 
import android.content.pm.PackageManager; 
import android.location.Address; 
import android.location.Geocoder; 
import android.location.Location; 
import android.os.Bundle; 
import android.widget.TextView; 
import android.widget.Toast; 
import androidx.annotation.NonNull; 
import androidx.appcompat.app.AppCompatActivity; 
import androidx.core.app.ActivityCompat; 
import androidx.core.content.ContextCompat; 
import com.google.android.gms.location.FusedLocationProviderClient; 
import com.google.android.gms.location.LocationServices; 
import java.io.IOException; 
import java.util.List; 
import java.util.Locale; 
 
public class MainActivity extends AppCompatActivity { 
 
    private static final int LOCATION_PERMISSION_REQUEST_CODE = 100; 
    private TextView locationTextView; 
    private FusedLocationProviderClient fusedLocationClient; 
 
    @Override 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState); 
        setContentView(R.layout.activity_main); 
 
        locationTextView = findViewById(R.id.locationTextView); 
        fusedLocationClient = 
LocationServices.getFusedLocationProviderClient(this); 
 
        if (ContextCompat.checkSelfPermission(this, 
Manifest.permission.ACCESS_FINE_LOCATION) 
                != PackageManager.PERMISSION_GRANTED) { 
            ActivityCompat.requestPermissions(this, 
                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 
                    LOCATION_PERMISSION_REQUEST_CODE); 
        } else { 
            getLocation(); 
        } 
    } 
 
    private void getLocation() { 
        try { 
            fusedLocationClient.getLastLocation() 
                    .addOnSuccessListener(this, location -> { 
                        if (location != null) { 
                            displayAddressDetails(location); 
                        } else { 
                            locationTextView.setText("Location not 
available"); 
                        } 
                    }); 
        } catch (SecurityException e) { 
            e.printStackTrace(); 
            locationTextView.setText("Error: " + e.getMessage()); 
        } 
    } 
 
    private void displayAddressDetails(Location location) { 
        Geocoder geocoder = new Geocoder(this, Locale.getDefault()); 
        try { 
            List<Address> addresses = geocoder.getFromLocation( 
                    location.getLatitude(), 
                    location.getLongitude(), 
                    1); 
 
            if (!addresses.isEmpty()) { 
                Address address = addresses.get(0); 
                String addressDetails = address.getAddressLine(0) + "\n" + 
                        address.getLocality() + ", " + 
                        address.getAdminArea() + "\n" + 
                        address.getCountryName() + "\n" + 
                        address.getPostalCode(); 
                locationTextView.setText(addressDetails); 
            } else { 
                locationTextView.setText("Address not found"); 
            } 
        } catch (IOException e) { 
            e.printStackTrace(); 
            locationTextView.setText("Error: " + e.getMessage()); 
        } 
    } 
 
    @Override 
    public void onRequestPermissionsResult(int requestCode, @NonNull 
String[] permissions, @NonNull int[] grantResults) { 
        super.onRequestPermissionsResult(requestCode, permissions, 
grantResults); 
        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) { 
            if (grantResults.length > 0 && grantResults[0] == 
PackageManager.PERMISSION_GRANTED) { 
                getLocation(); 
            } else { 
                Toast.makeText(this, "Location permission denied", 
Toast.LENGTH_SHORT).show(); 
            } 
        } 
    }


